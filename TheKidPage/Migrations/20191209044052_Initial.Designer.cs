// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheKidPage.Repositories;

namespace TheKidPage.Migrations
{
    [DbContext(typeof(ApplicaitonDbContext))]
    [Migration("20191209044052_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheKidPage.Models.Joke", b =>
                {
                    b.Property<int>("JokeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JokeLine");

                    b.Property<string>("KeyWord");

                    b.Property<string>("Name");

                    b.Property<DateTime>("PubDate");

                    b.HasKey("JokeID");

                    b.ToTable("Jokes");
                });

            modelBuilder.Entity("TheKidPage.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int?>("JokeID");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("UserId");

                    b.HasIndex("JokeID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TheKidPage.Models.User", b =>
                {
                    b.HasOne("TheKidPage.Models.Joke")
                        .WithMany("Users")
                        .HasForeignKey("JokeID");
                });
#pragma warning restore 612, 618
        }
    }
}
